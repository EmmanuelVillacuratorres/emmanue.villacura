{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\emman\\\\Desktop\\\\project (1)\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport ClientServices from './pages/ClientServices';\nimport AdminDashboard from './pages/AdminDashboard';\nimport AdminProducts from './pages/AdminProducts';\nimport AdminBookings from './pages/AdminBookings';\nimport LoginModal from './components/LoginModal';\nimport { users } from './mock/users';\nimport Layout from './components/Layout';\nimport Register from './pages/Register';\nimport RestorePassword from './pages/RestorePassword';\nimport UsuariosList from './components/UsuariosList';\nimport { loginUsuario } from './api/usuarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  // Recupera el usuario de localStorage al cargar la app\n  const [currentUser, setCurrentUser] = useState(() => {\n    const saved = localStorage.getItem('user');\n    return saved ? JSON.parse(saved) : null;\n  });\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  // Si el usuario cambia, actualiza localStorage\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem('user', JSON.stringify(currentUser));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [currentUser]);\n  const handleLogin = async (username, password) => {\n    const result = await loginUsuario({\n      username,\n      password\n    });\n    if (result.success) {\n      // Guarda el usuario completo, incluyendo el Id\n      setCurrentUser({\n        id: result.user.Id,\n        username: result.user.NombreUsuario,\n        email: result.user.Correo,\n        role: result.user.Rol\n      });\n      // Redirige o muestra mensaje de éxito\n    } else {\n      alert(result.message || 'Usuario o contraseña incorrectos');\n    }\n  };\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    navigate('/');\n  };\n  const handleRegister = form => {\n    const newUser = {\n      username: form.username,\n      password: form.password,\n      email: form.email,\n      role: 'user'\n    };\n    users.push(newUser);\n    alert('Usuario registrado correctamente');\n    navigate('/');\n  };\n  const handleRestorePassword = email => {\n    alert('Si el correo existe, recibirás instrucciones para restaurar tu contraseña.');\n  };\n  const handleAdminCreateUser = form => {\n    const newUser = {\n      username: form.username,\n      password: form.password,\n      email: form.email,\n      role: form.role\n    };\n    users.push(newUser);\n    alert('Usuario creado correctamente');\n  };\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    user: currentUser,\n    onLogout: handleLogout,\n    onLoginClick: () => setIsLoginModalOpen(true),\n    children: [/*#__PURE__*/_jsxDEV(Routes, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        path: \"/\",\n        element: /*#__PURE__*/_jsxDEV(ClientServices, {\n          user: currentUser,\n          onLoginClick: () => setIsLoginModalOpen(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin\",\n        element: /*#__PURE__*/_jsxDEV(AdminDashboard, {\n          user: currentUser\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/products\",\n        element: /*#__PURE__*/_jsxDEV(AdminProducts, {\n          user: currentUser,\n          onLoginClick: () => setIsLoginModalOpen(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/admin/bookings\",\n        element: /*#__PURE__*/_jsxDEV(AdminBookings, {\n          user: currentUser,\n          onLoginClick: () => setIsLoginModalOpen(true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/register\",\n        element: /*#__PURE__*/_jsxDEV(Register, {\n          onRegister: handleRegister\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/restore-password\",\n        element: /*#__PURE__*/_jsxDEV(RestorePassword, {\n          onRestore: handleRestorePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 50\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/usuarios\",\n        element: /*#__PURE__*/_jsxDEV(UsuariosList, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 42\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoginModal, {\n      isOpen: isLoginModalOpen,\n      onClose: () => setIsLoginModalOpen(false),\n      onLogin: handleLogin\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n// Wrapper para usar useNavigate en App\n_s(App, \"uvxHpglTadwyvf8me6/0yz/n4KE=\", false, function () {\n  return [useNavigate];\n});\n_c = App;\nconst AppWrapper = () => /*#__PURE__*/_jsxDEV(Router, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 134,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 133,\n  columnNumber: 3\n}, this);\n_c2 = AppWrapper;\nexport default AppWrapper;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"AppWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","useNavigate","ClientServices","AdminDashboard","AdminProducts","AdminBookings","LoginModal","users","Layout","Register","RestorePassword","UsuariosList","loginUsuario","jsxDEV","_jsxDEV","App","_s","currentUser","setCurrentUser","saved","localStorage","getItem","JSON","parse","isLoginModalOpen","setIsLoginModalOpen","navigate","setItem","stringify","removeItem","handleLogin","username","password","result","success","id","user","Id","NombreUsuario","email","Correo","role","Rol","alert","message","handleLogout","handleRegister","form","newUser","push","handleRestorePassword","handleAdminCreateUser","onLogout","onLoginClick","children","path","element","fileName","_jsxFileName","lineNumber","columnNumber","onRegister","onRestore","isOpen","onClose","onLogin","_c","AppWrapper","_c2","$RefreshReg$"],"sources":["C:/Users/emman/Desktop/project (1)/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route, useNavigate } from 'react-router-dom';\nimport ClientServices from './pages/ClientServices';\nimport AdminDashboard from './pages/AdminDashboard';\nimport AdminProducts from './pages/AdminProducts';\nimport AdminBookings from './pages/AdminBookings';\nimport LoginModal from './components/LoginModal';\nimport { users } from './mock/users';\nimport Layout from './components/Layout';\nimport Register from './pages/Register';\nimport RestorePassword from './pages/RestorePassword';\nimport UsuariosList from './components/UsuariosList';\nimport { loginUsuario } from './api/usuarios';\n\nconst App = () => {\n  // Recupera el usuario de localStorage al cargar la app\n  const [currentUser, setCurrentUser] = useState(() => {\n    const saved = localStorage.getItem('user');\n    return saved ? JSON.parse(saved) : null;\n  });\n  const [isLoginModalOpen, setIsLoginModalOpen] = useState(false);\n  const navigate = useNavigate();\n\n  // Si el usuario cambia, actualiza localStorage\n  useEffect(() => {\n    if (currentUser) {\n      localStorage.setItem('user', JSON.stringify(currentUser));\n    } else {\n      localStorage.removeItem('user');\n    }\n  }, [currentUser]);\n\n  const handleLogin = async (username, password) => {\n    const result = await loginUsuario({ username, password });\n    if (result.success) {\n      // Guarda el usuario completo, incluyendo el Id\n      setCurrentUser({\n        id: result.user.Id,\n        username: result.user.NombreUsuario,\n        email: result.user.Correo,\n        role: result.user.Rol\n      });\n      // Redirige o muestra mensaje de éxito\n    } else {\n      alert(result.message || 'Usuario o contraseña incorrectos');\n    }\n  };\n\n  const handleLogout = () => {\n    localStorage.removeItem('user');\n    setCurrentUser(null);\n    navigate('/');\n  };\n\n  const handleRegister = (form) => {\n    const newUser = {\n      username: form.username,\n      password: form.password,\n      email: form.email,\n      role: 'user'\n    };\n    users.push(newUser);\n    alert('Usuario registrado correctamente');\n    navigate('/');\n  };\n\n  const handleRestorePassword = (email) => {\n    alert('Si el correo existe, recibirás instrucciones para restaurar tu contraseña.');\n  };\n\n  const handleAdminCreateUser = (form) => {\n    const newUser = {\n      username: form.username,\n      password: form.password,\n      email: form.email,\n      role: form.role\n    };\n    users.push(newUser);\n    alert('Usuario creado correctamente');\n  };\n\n  return (\n    <Layout user={currentUser} onLogout={handleLogout} onLoginClick={() => setIsLoginModalOpen(true)}>\n      <Routes>\n        <Route \n          path=\"/\" \n          element={\n            <ClientServices \n              user={currentUser} \n              onLoginClick={() => setIsLoginModalOpen(true)} \n            />\n          } \n        />\n        <Route \n          path=\"/admin\" \n          element={\n            <AdminDashboard user={currentUser} />\n          } \n        />\n        <Route \n          path=\"/admin/products\" \n          element={\n            <AdminProducts \n              user={currentUser} \n              onLoginClick={() => setIsLoginModalOpen(true)} \n            />\n          } \n        />\n        <Route \n          path=\"/admin/bookings\" \n          element={\n            <AdminBookings \n              user={currentUser} \n              onLoginClick={() => setIsLoginModalOpen(true)} \n            />\n          } \n        />\n        <Route path=\"/register\" element={<Register onRegister={handleRegister} />} />\n        <Route path=\"/restore-password\" element={<RestorePassword onRestore={handleRestorePassword} />} />\n        <Route path=\"/usuarios\" element={<UsuariosList />} />\n      </Routes>\n      <LoginModal \n        isOpen={isLoginModalOpen} \n        onClose={() => setIsLoginModalOpen(false)} \n        onLogin={handleLogin} \n      />\n    </Layout>\n  );\n};\n\n// Wrapper para usar useNavigate en App\nconst AppWrapper = () => (\n  <Router>\n    <App />\n  </Router>\n);\n\nexport default AppWrapper;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}