{"ast":null,"code":"import sql from 'some-sql-library'; // Asegúrate de importar la biblioteca SQL que estés usando\nimport { navigate } from 'some-navigation-library'; // Asegúrate de importar la biblioteca de navegación que estés usando\n\nexport async function registrarUsuario({\n  username,\n  password,\n  email\n}) {\n  const res = await fetch('http://localhost:4000/api/usuarios', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      NombreUsuario: username,\n      HashPassword: password,\n      Correo: email,\n      Rol: \"usuario\" // o el rol que corresponda\n    })\n  });\n  const usuario = {\n    NombreUsuario: username,\n    HashPassword: password,\n    Correo: email,\n    Rol: \"usuario\",\n    CreadoEn: new Date()\n  };\n  await sql.query`\n    INSERT INTO Usuarios (NombreUsuario, HashPassword, Correo, Rol, CreadoEn)\n    VALUES (${usuario.NombreUsuario}, ${usuario.HashPassword}, ${usuario.Correo}, ${usuario.Rol}, ${usuario.CreadoEn})\n  `;\n  const result = await res.json();\n  console.log(result); // <-- Agrega esto\n  if (result.success) {\n    alert('Usuario registrado correctamente');\n    navigate('/');\n  } else {\n    alert(result.error || 'Error al registrar usuario');\n  }\n  return result;\n}\nexport async function obtenerUsuarios() {\n  const res = await fetch('http://localhost:4000/api/usuarios');\n  return await res.json();\n}\nexport async function eliminarUsuario(id) {\n  const res = await fetch(`http://localhost:4000/api/usuarios/${id}`, {\n    method: 'DELETE'\n  });\n  return await res.json();\n}\nexport async function loginUsuario({\n  username,\n  password\n}) {\n  const res = await fetch('http://localhost:4000/api/usuarios/login', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username,\n      password\n    })\n  });\n  return await res.json();\n}","map":{"version":3,"names":["sql","navigate","registrarUsuario","username","password","email","res","fetch","method","headers","body","JSON","stringify","NombreUsuario","HashPassword","Correo","Rol","usuario","CreadoEn","Date","query","result","json","console","log","success","alert","error","obtenerUsuarios","eliminarUsuario","id","loginUsuario"],"sources":["C:/Users/emman/Desktop/project (1)/src/api/usuarios.js"],"sourcesContent":["import sql from 'some-sql-library'; // Asegúrate de importar la biblioteca SQL que estés usando\r\nimport { navigate } from 'some-navigation-library'; // Asegúrate de importar la biblioteca de navegación que estés usando\r\n\r\nexport async function registrarUsuario({ username, password, email }) {\r\n  const res = await fetch('http://localhost:4000/api/usuarios', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({\r\n      NombreUsuario: username,\r\n      HashPassword: password,\r\n      Correo: email,\r\n      Rol: \"usuario\" // o el rol que corresponda\r\n    })\r\n  });\r\n\r\n  const usuario = {\r\n    NombreUsuario: username,\r\n    HashPassword: password,\r\n    Correo: email,\r\n    Rol: \"usuario\",\r\n    CreadoEn: new Date()\r\n  };\r\n\r\n  await sql.query`\r\n    INSERT INTO Usuarios (NombreUsuario, HashPassword, Correo, Rol, CreadoEn)\r\n    VALUES (${usuario.NombreUsuario}, ${usuario.HashPassword}, ${usuario.Correo}, ${usuario.Rol}, ${usuario.CreadoEn})\r\n  `;\r\n\r\n  const result = await res.json();\r\n  console.log(result); // <-- Agrega esto\r\n  if (result.success) {\r\n    alert('Usuario registrado correctamente');\r\n    navigate('/');\r\n  } else {\r\n    alert(result.error || 'Error al registrar usuario');\r\n  }\r\n  return result;\r\n}\r\n\r\nexport async function obtenerUsuarios() {\r\n  const res = await fetch('http://localhost:4000/api/usuarios');\r\n  return await res.json();\r\n}\r\n\r\nexport async function eliminarUsuario(id) {\r\n  const res = await fetch(`http://localhost:4000/api/usuarios/${id}`, {\r\n    method: 'DELETE'\r\n  });\r\n  return await res.json();\r\n}\r\n\r\nexport async function loginUsuario({ username, password }) {\r\n  const res = await fetch('http://localhost:4000/api/usuarios/login', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ username, password })\r\n  });\r\n  return await res.json();\r\n}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,kBAAkB,CAAC,CAAC;AACpC,SAASC,QAAQ,QAAQ,yBAAyB,CAAC,CAAC;;AAEpD,OAAO,eAAeC,gBAAgBA,CAAC;EAAEC,QAAQ;EAAEC,QAAQ;EAAEC;AAAM,CAAC,EAAE;EACpE,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MACnBC,aAAa,EAAEV,QAAQ;MACvBW,YAAY,EAAEV,QAAQ;MACtBW,MAAM,EAAEV,KAAK;MACbW,GAAG,EAAE,SAAS,CAAC;IACjB,CAAC;EACH,CAAC,CAAC;EAEF,MAAMC,OAAO,GAAG;IACdJ,aAAa,EAAEV,QAAQ;IACvBW,YAAY,EAAEV,QAAQ;IACtBW,MAAM,EAAEV,KAAK;IACbW,GAAG,EAAE,SAAS;IACdE,QAAQ,EAAE,IAAIC,IAAI,CAAC;EACrB,CAAC;EAED,MAAMnB,GAAG,CAACoB,KAAK;AACjB;AACA,cAAcH,OAAO,CAACJ,aAAa,KAAKI,OAAO,CAACH,YAAY,KAAKG,OAAO,CAACF,MAAM,KAAKE,OAAO,CAACD,GAAG,KAAKC,OAAO,CAACC,QAAQ;AACpH,GAAG;EAED,MAAMG,MAAM,GAAG,MAAMf,GAAG,CAACgB,IAAI,CAAC,CAAC;EAC/BC,OAAO,CAACC,GAAG,CAACH,MAAM,CAAC,CAAC,CAAC;EACrB,IAAIA,MAAM,CAACI,OAAO,EAAE;IAClBC,KAAK,CAAC,kCAAkC,CAAC;IACzCzB,QAAQ,CAAC,GAAG,CAAC;EACf,CAAC,MAAM;IACLyB,KAAK,CAACL,MAAM,CAACM,KAAK,IAAI,4BAA4B,CAAC;EACrD;EACA,OAAON,MAAM;AACf;AAEA,OAAO,eAAeO,eAAeA,CAAA,EAAG;EACtC,MAAMtB,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,CAAC;EAC7D,OAAO,MAAMD,GAAG,CAACgB,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeO,eAAeA,CAACC,EAAE,EAAE;EACxC,MAAMxB,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsCuB,EAAE,EAAE,EAAE;IAClEtB,MAAM,EAAE;EACV,CAAC,CAAC;EACF,OAAO,MAAMF,GAAG,CAACgB,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeS,YAAYA,CAAC;EAAE5B,QAAQ;EAAEC;AAAS,CAAC,EAAE;EACzD,MAAME,GAAG,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;IAClEC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAET,QAAQ;MAAEC;IAAS,CAAC;EAC7C,CAAC,CAAC;EACF,OAAO,MAAME,GAAG,CAACgB,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}