{"ast":null,"code":"export async function crearReserva(reserva) {\n  const res = await fetch('http://localhost:4000/api/reservas', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reserva)\n  });\n  if (!res.ok) {\n    const error = await res.text();\n    throw new Error(error);\n  }\n  return await res.json();\n}\nexport async function obtenerReservas(req, res) {\n  try {\n    const result = await pool.request().query(`\n      SELECT \n        r.*, \n        u.Email AS UsuarioEmail, \n        u.Telefono AS UsuarioTelefono\n      FROM Reservas r\n      JOIN Usuarios u ON r.UsuarioId = u.Id\n    `);\n    res.json(result.recordset);\n  } catch (err) {\n    res.status(500).send('Error al obtener reservas');\n  }\n}\nexport async function cambiarEstadoReserva(id, estado) {\n  const res = await fetch(`http://localhost:4000/api/reservas/${id}/estado`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      Estado: estado\n    })\n  });\n  if (!res.ok) {\n    const error = await res.text();\n    throw new Error(error);\n  }\n  return await res.json();\n}","map":{"version":3,"names":["crearReserva","reserva","res","fetch","method","headers","body","JSON","stringify","ok","error","text","Error","json","obtenerReservas","req","result","pool","request","query","recordset","err","status","send","cambiarEstadoReserva","id","estado","Estado"],"sources":["C:/Users/emman/Desktop/project (1)/src/api/reservas.js"],"sourcesContent":["export async function crearReserva(reserva) {\r\n  const res = await fetch('http://localhost:4000/api/reservas', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reserva)\r\n  });\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(error);\r\n  }\r\n  return await res.json();\r\n}\r\n\r\nexport async function obtenerReservas(req, res) {\r\n  try {\r\n    const result = await pool.request().query(`\r\n      SELECT \r\n        r.*, \r\n        u.Email AS UsuarioEmail, \r\n        u.Telefono AS UsuarioTelefono\r\n      FROM Reservas r\r\n      JOIN Usuarios u ON r.UsuarioId = u.Id\r\n    `);\r\n    res.json(result.recordset);\r\n  } catch (err) {\r\n    res.status(500).send('Error al obtener reservas');\r\n  }\r\n}\r\n\r\nexport async function cambiarEstadoReserva(id, estado) {\r\n  const res = await fetch(`http://localhost:4000/api/reservas/${id}/estado`, {\r\n    method: 'PATCH',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ Estado: estado })\r\n  });\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(error);\r\n  }\r\n  return await res.json();\r\n}"],"mappings":"AAAA,OAAO,eAAeA,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,KAAK,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACF,KAAK,CAAC;EACxB;EACA,OAAO,MAAMR,GAAG,CAACW,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,eAAeA,CAACC,GAAG,EAAEb,GAAG,EAAE;EAC9C,IAAI;IACF,MAAMc,MAAM,GAAG,MAAMC,IAAI,CAACC,OAAO,CAAC,CAAC,CAACC,KAAK,CAAC;AAC9C;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,CAAC;IACFjB,GAAG,CAACW,IAAI,CAACG,MAAM,CAACI,SAAS,CAAC;EAC5B,CAAC,CAAC,OAAOC,GAAG,EAAE;IACZnB,GAAG,CAACoB,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC,2BAA2B,CAAC;EACnD;AACF;AAEA,OAAO,eAAeC,oBAAoBA,CAACC,EAAE,EAAEC,MAAM,EAAE;EACrD,MAAMxB,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsCsB,EAAE,SAAS,EAAE;IACzErB,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAEmB,MAAM,EAAED;IAAO,CAAC;EACzC,CAAC,CAAC;EACF,IAAI,CAACxB,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,KAAK,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACF,KAAK,CAAC;EACxB;EACA,OAAO,MAAMR,GAAG,CAACW,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}