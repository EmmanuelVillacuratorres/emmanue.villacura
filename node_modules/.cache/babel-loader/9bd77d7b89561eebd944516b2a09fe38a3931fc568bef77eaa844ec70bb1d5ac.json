{"ast":null,"code":"const express = require('express');\nconst router = express.Router();\nconst {\n  obtenerReservas\n} = require('../controllers/reservasController');\nrouter.get('/api/reservas', obtenerReservas);\nexport async function crearReserva(reserva) {\n  const res = await fetch('http://localhost:4000/api/reservas', {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify(reserva)\n  });\n  if (!res.ok) {\n    const error = await res.text();\n    throw new Error(error);\n  }\n  return await res.json();\n}\nexport async function cambiarEstadoReserva(id, estado) {\n  const res = await fetch(`http://localhost:4000/api/reservas/${id}/estado`, {\n    method: 'PATCH',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      Estado: estado\n    })\n  });\n  if (!res.ok) {\n    const error = await res.text();\n    throw new Error(error);\n  }\n  return await res.json();\n}","map":{"version":3,"names":["express","require","router","Router","obtenerReservas","get","crearReserva","reserva","res","fetch","method","headers","body","JSON","stringify","ok","error","text","Error","json","cambiarEstadoReserva","id","estado","Estado"],"sources":["C:/Users/emman/Desktop/project (1)/src/api/reservas.js"],"sourcesContent":["const express = require('express');\r\nconst router = express.Router();\r\nconst { obtenerReservas } = require('../controllers/reservasController');\r\n\r\nrouter.get('/api/reservas', obtenerReservas);\r\n\r\nexport async function crearReserva(reserva) {\r\n  const res = await fetch('http://localhost:4000/api/reservas', {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify(reserva)\r\n  });\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(error);\r\n  }\r\n  return await res.json();\r\n}\r\n\r\nexport async function cambiarEstadoReserva(id, estado) {\r\n  const res = await fetch(`http://localhost:4000/api/reservas/${id}/estado`, {\r\n    method: 'PATCH',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ Estado: estado })\r\n  });\r\n  if (!res.ok) {\r\n    const error = await res.text();\r\n    throw new Error(error);\r\n  }\r\n  return await res.json();\r\n}"],"mappings":"AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,SAAS,CAAC;AAClC,MAAMC,MAAM,GAAGF,OAAO,CAACG,MAAM,CAAC,CAAC;AAC/B,MAAM;EAAEC;AAAgB,CAAC,GAAGH,OAAO,CAAC,mCAAmC,CAAC;AAExEC,MAAM,CAACG,GAAG,CAAC,eAAe,EAAED,eAAe,CAAC;AAE5C,OAAO,eAAeE,YAAYA,CAACC,OAAO,EAAE;EAC1C,MAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,oCAAoC,EAAE;IAC5DC,MAAM,EAAE,MAAM;IACdC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,OAAO;EAC9B,CAAC,CAAC;EACF,IAAI,CAACC,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,KAAK,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACF,KAAK,CAAC;EACxB;EACA,OAAO,MAAMR,GAAG,CAACW,IAAI,CAAC,CAAC;AACzB;AAEA,OAAO,eAAeC,oBAAoBA,CAACC,EAAE,EAAEC,MAAM,EAAE;EACrD,MAAMd,GAAG,GAAG,MAAMC,KAAK,CAAC,sCAAsCY,EAAE,SAAS,EAAE;IACzEX,MAAM,EAAE,OAAO;IACfC,OAAO,EAAE;MAAE,cAAc,EAAE;IAAmB,CAAC;IAC/CC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;MAAES,MAAM,EAAED;IAAO,CAAC;EACzC,CAAC,CAAC;EACF,IAAI,CAACd,GAAG,CAACO,EAAE,EAAE;IACX,MAAMC,KAAK,GAAG,MAAMR,GAAG,CAACS,IAAI,CAAC,CAAC;IAC9B,MAAM,IAAIC,KAAK,CAACF,KAAK,CAAC;EACxB;EACA,OAAO,MAAMR,GAAG,CAACW,IAAI,CAAC,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}