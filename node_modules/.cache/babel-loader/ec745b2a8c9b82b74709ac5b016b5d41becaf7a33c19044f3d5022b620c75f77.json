{"ast":null,"code":"export const generateUniqueId = () => {\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\n};\nexport const formatPrice = price => {\n  return new Intl.NumberFormat('es-CL', {\n    style: 'currency',\n    currency: 'CLP'\n  }).format(price);\n};\nexport const formatDuration = minutes => {\n  const hours = Math.floor(minutes / 60);\n  const mins = minutes % 60;\n  if (hours === 0) return `${mins} min`;\n  if (mins === 0) return `${hours}h`;\n  return `${hours}h ${mins}min`;\n};\nexport const getAvailableTimeSlots = date => {\n  const slots = [];\n  const startHour = 9;\n  const endHour = 18;\n  for (let hour = startHour; hour < endHour; hour++) {\n    slots.push(`${hour.toString().padStart(2, '0')}:00`);\n    slots.push(`${hour.toString().padStart(2, '0')}:30`);\n  }\n  return slots;\n};\nexport const isValidEmail = email => {\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n  return emailRegex.test(email);\n};\nexport const isValidPhone = phone => {\n  const phoneRegex = /^\\+?56[0-9]{8,9}$/;\n  return phoneRegex.test(phone.replace(/\\s/g, ''));\n};","map":{"version":3,"names":["generateUniqueId","Date","now","toString","Math","random","substr","formatPrice","price","Intl","NumberFormat","style","currency","format","formatDuration","minutes","hours","floor","mins","getAvailableTimeSlots","date","slots","startHour","endHour","hour","push","padStart","isValidEmail","email","emailRegex","test","isValidPhone","phone","phoneRegex","replace"],"sources":["C:/Users/emman/Desktop/app-emma repo git/new/2/emmanue.villacura/src/utils/helpers.js"],"sourcesContent":["export const generateUniqueId = () => {\r\n  return Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n};\r\n\r\nexport const formatPrice = (price) => {\r\n  return new Intl.NumberFormat('es-CL', {\r\n    style: 'currency',\r\n    currency: 'CLP'\r\n  }).format(price);\r\n};\r\n\r\nexport const formatDuration = (minutes) => {\r\n  const hours = Math.floor(minutes / 60);\r\n  const mins = minutes % 60;\r\n  \r\n  if (hours === 0) return `${mins} min`;\r\n  if (mins === 0) return `${hours}h`;\r\n  return `${hours}h ${mins}min`;\r\n};\r\n\r\nexport const getAvailableTimeSlots = (date) => {\r\n  const slots = [];\r\n  const startHour = 9;\r\n  const endHour = 18;\r\n  \r\n  for (let hour = startHour; hour < endHour; hour++) {\r\n    slots.push(`${hour.toString().padStart(2, '0')}:00`);\r\n    slots.push(`${hour.toString().padStart(2, '0')}:30`);\r\n  }\r\n  \r\n  return slots;\r\n};\r\n\r\nexport const isValidEmail = (email) => {\r\n  const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\r\n  return emailRegex.test(email);\r\n};\r\n\r\nexport const isValidPhone = (phone) => {\r\n  const phoneRegex = /^\\+?56[0-9]{8,9}$/;\r\n  return phoneRegex.test(phone.replace(/\\s/g, ''));\r\n};"],"mappings":"AAAA,OAAO,MAAMA,gBAAgB,GAAGA,CAAA,KAAM;EACpC,OAAOC,IAAI,CAACC,GAAG,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACF,QAAQ,CAAC,EAAE,CAAC,CAACG,MAAM,CAAC,CAAC,CAAC;AACvE,CAAC;AAED,OAAO,MAAMC,WAAW,GAAIC,KAAK,IAAK;EACpC,OAAO,IAAIC,IAAI,CAACC,YAAY,CAAC,OAAO,EAAE;IACpCC,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACZ,CAAC,CAAC,CAACC,MAAM,CAACL,KAAK,CAAC;AAClB,CAAC;AAED,OAAO,MAAMM,cAAc,GAAIC,OAAO,IAAK;EACzC,MAAMC,KAAK,GAAGZ,IAAI,CAACa,KAAK,CAACF,OAAO,GAAG,EAAE,CAAC;EACtC,MAAMG,IAAI,GAAGH,OAAO,GAAG,EAAE;EAEzB,IAAIC,KAAK,KAAK,CAAC,EAAE,OAAO,GAAGE,IAAI,MAAM;EACrC,IAAIA,IAAI,KAAK,CAAC,EAAE,OAAO,GAAGF,KAAK,GAAG;EAClC,OAAO,GAAGA,KAAK,KAAKE,IAAI,KAAK;AAC/B,CAAC;AAED,OAAO,MAAMC,qBAAqB,GAAIC,IAAI,IAAK;EAC7C,MAAMC,KAAK,GAAG,EAAE;EAChB,MAAMC,SAAS,GAAG,CAAC;EACnB,MAAMC,OAAO,GAAG,EAAE;EAElB,KAAK,IAAIC,IAAI,GAAGF,SAAS,EAAEE,IAAI,GAAGD,OAAO,EAAEC,IAAI,EAAE,EAAE;IACjDH,KAAK,CAACI,IAAI,CAAC,GAAGD,IAAI,CAACrB,QAAQ,CAAC,CAAC,CAACuB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;IACpDL,KAAK,CAACI,IAAI,CAAC,GAAGD,IAAI,CAACrB,QAAQ,CAAC,CAAC,CAACuB,QAAQ,CAAC,CAAC,EAAE,GAAG,CAAC,KAAK,CAAC;EACtD;EAEA,OAAOL,KAAK;AACd,CAAC;AAED,OAAO,MAAMM,YAAY,GAAIC,KAAK,IAAK;EACrC,MAAMC,UAAU,GAAG,4BAA4B;EAC/C,OAAOA,UAAU,CAACC,IAAI,CAACF,KAAK,CAAC;AAC/B,CAAC;AAED,OAAO,MAAMG,YAAY,GAAIC,KAAK,IAAK;EACrC,MAAMC,UAAU,GAAG,mBAAmB;EACtC,OAAOA,UAAU,CAACH,IAAI,CAACE,KAAK,CAACE,OAAO,CAAC,KAAK,EAAE,EAAE,CAAC,CAAC;AAClD,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}